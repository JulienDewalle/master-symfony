security:
    encoders:
        Symfony\Component\Security\Core\User\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory:
            memory:
                users:
                    julien: { password: '$argon2id$v=19$m=65536,t=4,p=1$a2sxMXV2SDNXbFZuUFB1ZA$GjNCJk1AFjmCx38+UoZTzATMejsCbHGbww33/KeIgKw', roles: [ 'ROLE_ADMIN' ] } #cocodu59
                    jean: { password: '$argon2id$v=19$m=65536,t=4,p=1$SlhlNlZ1UmN1TmdaRmdFYg$7QmPSYWmxGHylZJfqIcEygKjgNfYlgwSoPrv/Es0Ilg', roles: [ 'ROLE_USER' ]} #coco
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy

            form_login:
                login_path: login
                check_path: login
            logout: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # Pour faire un backoffice
         - { path: ^/admin/product, roles: ROLE_ADMIN }
         - { path: ^/profile, roles: ROLE_USER }
        # Pour faire un intranet
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        #- { path: ^/, roles: ROLE_USER }
